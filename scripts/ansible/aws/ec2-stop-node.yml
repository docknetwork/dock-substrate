- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    instance_name: "{{ name }} (created by ansible)"
  tasks:

  - name: Remove disk space alarm
    amazon.aws.cloudwatch_metric_alarm:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      name: "Low disk space alarm for `{{ instance_name }}` (created by ansible)"
      state: absent

  - name: Remove SNS alarm topic
    community.aws.sns_topic:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      name: AlarmTopicCreatedByAnsible
      state: absent
    register: sns_topic

  - name: Remove Lambda policy to receive alarm notifications
    when: sns_topic.sns_arn != None
    amazon.aws.lambda_policy:
      profile: "{{ aws_profile }}"
      region: "{{ alarm_lambda_arn.split(':').3 }}"
      state: present
      function_name: "{{ alarm_lambda_arn }}"
      statement_id: "{{ sns_topic.sns_arn | replace(':', '-') }}"
      action: lambda:InvokeFunction
      principal: sns.amazonaws.com
      source_arn: "{{ sns_topic.sns_arn }}"

  - name: Get ubuntu AMI identifier
    amazon.aws.ec2_ami_info:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      owner: "amazon"
      filters:
        name: "{{ ami_name | default('ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20230601') }}"
    register: ami_info

  - name: AMI image info
    ansible.builtin.debug:
      msg: "{{ ami_info['images'][-1] }}"

  - name: Stop or terminate AWS EC2 instance
    amazon.aws.ec2_instance:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      state: "{{ 'terminated' if terminate | default('false') | bool else 'stopped' }}"
      filters: 
        "tag:Name":
          - "{{ instance_name }}"
      wait: true
