- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    instance_name: "{{ name }} (created by ansible)"
    group_name: "{{ 'HTTP & HTTPS (created by ansible)' if https_bool else 'Restricted HTTP (created by ansible)' }}"
  tasks:
  - set_fact: 
      https_bool: "{{ https | default('true') | bool }}"
  - name: Create HTTP & HTTPS security group
    when: https_bool
    amazon.aws.ec2_security_group:
      region: "{{ aws_region }}"
      profile: "{{ aws_profile }}"
      name: "{{ group_name }}"
      description: Allows http and https connection (created by ansible)
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0

  - name: Create restricted HTTP security group
    when: not https_bool
    amazon.aws.ec2_security_group:
      region: "{{ aws_region }}"
      profile: "{{ aws_profile }}"
      name: "{{ group_name }}"
      description: Allows http connection (created by ansible)
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          group_name: "{{ group_name }}"

  - name: Get EC2 instance state
    amazon.aws.ec2_instance:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      name: "{{ instance_name }}"
    register: instances

  - name: EC2 instance info
    ansible.builtin.debug:
      msg: Existing security groups {{ instances['instances'][0] | json_query('security_groups[*].group_id') }}

  - name: Add {{ group_name }} to the EC2 instance
    amazon.aws.ec2_instance:
      profile: "{{ aws_profile }}"
      region: "{{ aws_region }}"
      name: "{{ instance_name }}"
      security_groups: "{{ instances['instances'][0] | json_query('security_groups[*].group_id') + [group_name] }}"

  - name: Add a host
    ansible.builtin.add_host:
      hostname: "{{ instances['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
      inventory_dir: "{{ inventory_dir }}"
      groups: "{{ instance_host }}"

- name: Open SSH port
  ansible.builtin.import_playbook: ./ec2-enable-ssh.yml

- name: Setup http nginx
  when: not hostvars['localhost']['https_bool']
  ansible.builtin.import_playbook: ../setup-nginx-http.yml
  vars:
    overriden_host: "{{ hostvars['localhost']['instances']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
    
- name: Setup https nginx and issue certs
  when: hostvars['localhost']['https_bool']
  ansible.builtin.import_playbook: ../setup-nginx-https.yml
  vars:
    overriden_host: "{{ hostvars['localhost']['instances']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"

- name: Close SSH port
  ansible.builtin.import_playbook: ./ec2-disable-ssh.yml