//! Autogenerated weights for accumulator
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-07-05, STEPS: `[500, ]`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("mainnet"), DB CACHE: 128

// Executed Command:
// ./target/release/dock-node
// benchmark
// --execution
// wasm
// --chain
// mainnet
// --wasm-execution
// compiled
// --pallet
// accumulator
// --extra
// --extrinsic
// *
// --repeat
// 50
// --steps
// 500
// --output
// ./pallets/core_mods/src/modules/accumulator/weights.rs
// --template
// node/module-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for accumulator.
pub trait WeightInfo {
	fn add_params_sr25519(b: u32, l: u32, ) -> Weight;
	fn add_params_ed25519(b: u32, l: u32, ) -> Weight;
	fn add_params_secp256k1(b: u32, l: u32, ) -> Weight;
	fn remove_params_sr25519() -> Weight;
	fn remove_params_ed25519() -> Weight;
	fn remove_params_secp256k1() -> Weight;
	fn add_public_sr25519(b: u32, ) -> Weight;
	fn add_public_ed25519(b: u32, ) -> Weight;
	fn add_public_secp256k1(b: u32, ) -> Weight;
	fn remove_public_sr25519() -> Weight;
	fn remove_public_ed25519() -> Weight;
	fn remove_public_secp256k1() -> Weight;
	fn add_accumulator_sr25519(b: u32, ) -> Weight;
	fn add_accumulator_ed25519(b: u32, ) -> Weight;
	fn add_accumulator_secp256k1(b: u32, ) -> Weight;
	fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight;
	fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight;
	fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight;
	fn remove_accumulator_sr25519(b: u32, ) -> Weight;
	fn remove_accumulator_ed25519(b: u32, ) -> Weight;
	fn remove_accumulator_secp256k1(b: u32, ) -> Weight;
}

/// Weights for accumulator using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn add_params_sr25519(b: u32, l: u32, ) -> Weight {
		(67_661_000 as Weight)
			// Standard Error: 0
			.saturating_add((6_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((8_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_params_ed25519(b: u32, l: u32, ) -> Weight {
		(65_778_000 as Weight)
			// Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_params_secp256k1(b: u32, l: u32, ) -> Weight {
		(214_167_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((8_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_params_sr25519() -> Weight {
		(68_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn remove_params_ed25519() -> Weight {
		(65_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn remove_params_secp256k1() -> Weight {
		(214_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn add_public_sr25519(b: u32, ) -> Weight {
		(73_323_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_public_ed25519(b: u32, ) -> Weight {
		(71_045_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_public_secp256k1(b: u32, ) -> Weight {
		(220_041_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_public_sr25519() -> Weight {
		(68_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn remove_public_ed25519() -> Weight {
		(66_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn remove_public_secp256k1() -> Weight {
		(216_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	fn add_accumulator_sr25519(b: u32, ) -> Weight {
		(78_573_000 as Weight)
			// Standard Error: 0
			.saturating_add((9_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_accumulator_ed25519(b: u32, ) -> Weight {
		(75_653_000 as Weight)
			// Standard Error: 0
			.saturating_add((12_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn add_accumulator_secp256k1(b: u32, ) -> Weight {
		(224_922_000 as Weight)
			// Standard Error: 0
			.saturating_add((12_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight {
		(62_821_000 as Weight)
			// Standard Error: 0
			.saturating_add((28_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 25_000
			.saturating_add((60_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 2_000
			.saturating_add((175_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 25_000
			.saturating_add((730_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 2_000
			.saturating_add((81_000 as Weight).saturating_mul(e as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight {
		(68_521_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 10_000
			.saturating_add((177_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 1_000
			.saturating_add((136_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 10_000
			.saturating_add((269_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 1_000
			.saturating_add((7_000 as Weight).saturating_mul(e as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, _e: u32, ) -> Weight {
		(217_558_000 as Weight)
			// Standard Error: 0
			.saturating_add((6_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 21_000
			.saturating_add((208_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 2_000
			.saturating_add((150_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 21_000
			.saturating_add((295_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_sr25519(_b: u32, ) -> Weight {
		(73_007_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_ed25519(_b: u32, ) -> Weight {
		(70_415_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_secp256k1(b: u32, ) -> Weight {
		(220_686_000 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn add_params_sr25519(b: u32, l: u32, ) -> Weight {
		(67_661_000 as Weight)
			// Standard Error: 0
			.saturating_add((6_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((8_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_params_ed25519(b: u32, l: u32, ) -> Weight {
		(65_778_000 as Weight)
			// Standard Error: 0
			.saturating_add((4_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_params_secp256k1(b: u32, l: u32, ) -> Weight {
		(214_167_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 0
			.saturating_add((8_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_params_sr25519() -> Weight {
		(68_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn remove_params_ed25519() -> Weight {
		(65_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn remove_params_secp256k1() -> Weight {
		(214_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn add_public_sr25519(b: u32, ) -> Weight {
		(73_323_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_public_ed25519(b: u32, ) -> Weight {
		(71_045_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_public_secp256k1(b: u32, ) -> Weight {
		(220_041_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_public_sr25519() -> Weight {
		(68_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn remove_public_ed25519() -> Weight {
		(66_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn remove_public_secp256k1() -> Weight {
		(216_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn add_accumulator_sr25519(b: u32, ) -> Weight {
		(78_573_000 as Weight)
			// Standard Error: 0
			.saturating_add((9_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_accumulator_ed25519(b: u32, ) -> Weight {
		(75_653_000 as Weight)
			// Standard Error: 0
			.saturating_add((12_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn add_accumulator_secp256k1(b: u32, ) -> Weight {
		(224_922_000 as Weight)
			// Standard Error: 0
			.saturating_add((12_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight {
		(62_821_000 as Weight)
			// Standard Error: 0
			.saturating_add((28_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 25_000
			.saturating_add((60_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 2_000
			.saturating_add((175_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 25_000
			.saturating_add((730_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 2_000
			.saturating_add((81_000 as Weight).saturating_mul(e as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, ) -> Weight {
		(68_521_000 as Weight)
			// Standard Error: 0
			.saturating_add((5_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 10_000
			.saturating_add((177_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 1_000
			.saturating_add((136_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 10_000
			.saturating_add((269_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 1_000
			.saturating_add((7_000 as Weight).saturating_mul(e as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, _e: u32, ) -> Weight {
		(217_558_000 as Weight)
			// Standard Error: 0
			.saturating_add((6_000 as Weight).saturating_mul(a as Weight))
			// Standard Error: 21_000
			.saturating_add((208_000 as Weight).saturating_mul(b as Weight))
			// Standard Error: 2_000
			.saturating_add((150_000 as Weight).saturating_mul(c as Weight))
			// Standard Error: 21_000
			.saturating_add((295_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_sr25519(_b: u32, ) -> Weight {
		(73_007_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_ed25519(_b: u32, ) -> Weight {
		(70_415_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_accumulator_secp256k1(b: u32, ) -> Weight {
		(220_686_000 as Weight)
			// Standard Error: 0
			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
}
