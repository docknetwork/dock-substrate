//! Autogenerated weights for accumulator
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-07-07, STEPS: `[500, ]`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("mainnet"), DB CACHE: 128

// Executed Command:
// ./target/release/dock-node
// benchmark
// --execution
// wasm
// --chain
// mainnet
// --wasm-execution
// compiled
// --pallet
// accumulator
// --extra
// --extrinsic
// *
// --repeat
// 50
// --steps
// 500
// --output
// ./pallets/core_mods/src/modules/accumulator/weights.rs
// --template
// node/module-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for accumulator.
pub trait WeightInfo {
    fn add_params_sr25519(b: u32, l: u32) -> Weight;
    fn add_params_ed25519(b: u32, l: u32) -> Weight;
    fn add_params_secp256k1(b: u32, l: u32) -> Weight;
    fn remove_params_sr25519() -> Weight;
    fn remove_params_ed25519() -> Weight;
    fn remove_params_secp256k1() -> Weight;
    fn add_public_sr25519(b: u32) -> Weight;
    fn add_public_ed25519(b: u32) -> Weight;
    fn add_public_secp256k1(b: u32) -> Weight;
    fn remove_public_sr25519() -> Weight;
    fn remove_public_ed25519() -> Weight;
    fn remove_public_secp256k1() -> Weight;
    fn add_accumulator_sr25519(b: u32) -> Weight;
    fn add_accumulator_ed25519(b: u32) -> Weight;
    fn add_accumulator_secp256k1(b: u32) -> Weight;
    fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32) -> Weight;
    fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32) -> Weight;
    fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32) -> Weight;
    fn remove_accumulator_sr25519() -> Weight;
    fn remove_accumulator_ed25519() -> Weight;
    fn remove_accumulator_secp256k1() -> Weight;
}

/// Weights for accumulator using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    fn add_params_sr25519(b: u32, l: u32) -> Weight {
        (95_423_000 as Weight)
            // Standard Error: 0
            .saturating_add((7_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((9_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_params_ed25519(b: u32, l: u32) -> Weight {
        (91_186_000 as Weight)
            // Standard Error: 0
            .saturating_add((5_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((8_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_params_secp256k1(b: u32, l: u32) -> Weight {
        (382_111_000 as Weight)
            // Standard Error: 0
            .saturating_add((9_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 1_000
            .saturating_add((13_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn remove_params_sr25519() -> Weight {
        (94_396_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn remove_params_ed25519() -> Weight {
        (90_197_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn remove_params_secp256k1() -> Weight {
        (382_155_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn add_public_sr25519(b: u32) -> Weight {
        (101_946_000 as Weight)
            // Standard Error: 0
            .saturating_add((4_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_public_ed25519(b: u32) -> Weight {
        (98_066_000 as Weight)
            // Standard Error: 0
            .saturating_add((1_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_public_secp256k1(b: u32) -> Weight {
        (394_715_000 as Weight)
            // Standard Error: 0
            .saturating_add((4_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn remove_public_sr25519() -> Weight {
        (94_298_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn remove_public_ed25519() -> Weight {
        (91_246_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn remove_public_secp256k1() -> Weight {
        (379_716_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn add_accumulator_sr25519(b: u32) -> Weight {
        (109_376_000 as Weight)
            // Standard Error: 0
            .saturating_add((13_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(5 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_accumulator_ed25519(b: u32) -> Weight {
        (105_442_000 as Weight)
            // Standard Error: 0
            .saturating_add((11_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(5 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn add_accumulator_secp256k1(b: u32) -> Weight {
        (404_959_000 as Weight)
            // Standard Error: 1_000
            .saturating_add((12_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(T::DbWeight::get().reads(5 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, _f: u32) -> Weight {
        (76_605_000 as Weight)
            // Standard Error: 0
            .saturating_add((11_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 1_000
            .saturating_add((585_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((146_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 1_000
            .saturating_add((580_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 0
            .saturating_add((147_000 as Weight).saturating_mul(e as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, _f: u32) -> Weight {
        (80_592_000 as Weight)
            // Standard Error: 0
            .saturating_add((12_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 1_000
            .saturating_add((442_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((102_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 1_000
            .saturating_add((438_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 0
            .saturating_add((106_000 as Weight).saturating_mul(e as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32) -> Weight {
        (365_228_000 as Weight)
            // Standard Error: 1_000
            .saturating_add((11_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 8_000
            .saturating_add((699_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 1_000
            .saturating_add((174_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 8_000
            .saturating_add((717_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 1_000
            .saturating_add((178_000 as Weight).saturating_mul(e as Weight))
            // Standard Error: 1_000
            .saturating_add((2_000 as Weight).saturating_mul(f as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_sr25519() -> Weight {
        (102_051_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_ed25519() -> Weight {
        (97_949_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_secp256k1() -> Weight {
        (395_873_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn add_params_sr25519(b: u32, l: u32) -> Weight {
        (95_423_000 as Weight)
            // Standard Error: 0
            .saturating_add((7_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((9_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_params_ed25519(b: u32, l: u32) -> Weight {
        (91_186_000 as Weight)
            // Standard Error: 0
            .saturating_add((5_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((8_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_params_secp256k1(b: u32, l: u32) -> Weight {
        (382_111_000 as Weight)
            // Standard Error: 0
            .saturating_add((9_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 1_000
            .saturating_add((13_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn remove_params_sr25519() -> Weight {
        (94_396_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn remove_params_ed25519() -> Weight {
        (90_197_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn remove_params_secp256k1() -> Weight {
        (382_155_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn add_public_sr25519(b: u32) -> Weight {
        (101_946_000 as Weight)
            // Standard Error: 0
            .saturating_add((4_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_public_ed25519(b: u32) -> Weight {
        (98_066_000 as Weight)
            // Standard Error: 0
            .saturating_add((1_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_public_secp256k1(b: u32) -> Weight {
        (394_715_000 as Weight)
            // Standard Error: 0
            .saturating_add((4_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn remove_public_sr25519() -> Weight {
        (94_298_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn remove_public_ed25519() -> Weight {
        (91_246_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn remove_public_secp256k1() -> Weight {
        (379_716_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(3 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn add_accumulator_sr25519(b: u32) -> Weight {
        (109_376_000 as Weight)
            // Standard Error: 0
            .saturating_add((13_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(5 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_accumulator_ed25519(b: u32) -> Weight {
        (105_442_000 as Weight)
            // Standard Error: 0
            .saturating_add((11_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(5 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn add_accumulator_secp256k1(b: u32) -> Weight {
        (404_959_000 as Weight)
            // Standard Error: 1_000
            .saturating_add((12_000 as Weight).saturating_mul(b as Weight))
            .saturating_add(RocksDbWeight::get().reads(5 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_sr25519(a: u32, b: u32, c: u32, d: u32, e: u32, _f: u32) -> Weight {
        (76_605_000 as Weight)
            // Standard Error: 0
            .saturating_add((11_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 1_000
            .saturating_add((585_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((146_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 1_000
            .saturating_add((580_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 0
            .saturating_add((147_000 as Weight).saturating_mul(e as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_ed25519(a: u32, b: u32, c: u32, d: u32, e: u32, _f: u32) -> Weight {
        (80_592_000 as Weight)
            // Standard Error: 0
            .saturating_add((12_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 1_000
            .saturating_add((442_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 0
            .saturating_add((102_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 1_000
            .saturating_add((438_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 0
            .saturating_add((106_000 as Weight).saturating_mul(e as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn update_accumulator_secp256k1(a: u32, b: u32, c: u32, d: u32, e: u32, f: u32) -> Weight {
        (365_228_000 as Weight)
            // Standard Error: 1_000
            .saturating_add((11_000 as Weight).saturating_mul(a as Weight))
            // Standard Error: 8_000
            .saturating_add((699_000 as Weight).saturating_mul(b as Weight))
            // Standard Error: 1_000
            .saturating_add((174_000 as Weight).saturating_mul(c as Weight))
            // Standard Error: 8_000
            .saturating_add((717_000 as Weight).saturating_mul(d as Weight))
            // Standard Error: 1_000
            .saturating_add((178_000 as Weight).saturating_mul(e as Weight))
            // Standard Error: 1_000
            .saturating_add((2_000 as Weight).saturating_mul(f as Weight))
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_sr25519() -> Weight {
        (102_051_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_ed25519() -> Weight {
        (97_949_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
    fn remove_accumulator_secp256k1() -> Weight {
        (395_873_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(4 as Weight))
            .saturating_add(RocksDbWeight::get().writes(3 as Weight))
    }
}
