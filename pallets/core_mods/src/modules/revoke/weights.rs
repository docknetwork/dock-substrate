//! Autogenerated weights for revoke
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-08-01, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Native), WASM-EXECUTION: Interpreted, CHAIN: Some("mainnet"), DB CACHE: 128

// Executed Command:
// ./target/production/dock-node
// benchmark
// --execution=native
// --chain=mainnet
// --pallet=revoke
// --extra
// --extrinsic=*
// --repeat=20
// --steps=50
// --template=node/module-weight-template.hbs
// --output=./pallets/core_mods/src/modules/revoke/weights.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for revoke.
pub trait WeightInfo {
	fn revoke_sr25519(r: u32, ) -> Weight;
	fn revoke_ed25519(r: u32, ) -> Weight;
	fn revoke_secp256k1(r: u32, ) -> Weight;
	fn unrevoke_sr25519(r: u32, ) -> Weight;
	fn unrevoke_ed25519(r: u32, ) -> Weight;
	fn unrevoke_secp256k1(r: u32, ) -> Weight;
	fn remove_registry_sr25519(c: u32, ) -> Weight;
	fn remove_registry_ed25519(c: u32, ) -> Weight;
	fn remove_registry_secp256k1(c: u32, ) -> Weight;
	fn new_registry(c: u32, ) -> Weight;
}

/// Weights for revoke using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn revoke_sr25519(r: u32, ) -> Weight {
		(49_460_000 as Weight)
			// Standard Error: 0
			.saturating_add((751_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_ed25519(r: u32, ) -> Weight {
		(52_412_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((724_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_secp256k1(r: u32, ) -> Weight {
		(156_933_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((678_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_sr25519(r: u32, ) -> Weight {
		(62_231_000 as Weight)
			// Standard Error: 0
			.saturating_add((757_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_ed25519(r: u32, ) -> Weight {
		(57_784_000 as Weight)
			// Standard Error: 0
			.saturating_add((749_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_secp256k1(r: u32, ) -> Weight {
		(165_961_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((721_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn remove_registry_sr25519(c: u32, ) -> Weight {
		(62_612_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((147_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_ed25519(c: u32, ) -> Weight {
		(61_228_000 as Weight)
			// Standard Error: 12_000
			.saturating_add((132_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_secp256k1(_c: u32, ) -> Weight {
		(167_872_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn new_registry(c: u32, ) -> Weight {
		(9_360_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((24_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn revoke_sr25519(r: u32, ) -> Weight {
		(49_460_000 as Weight)
			// Standard Error: 0
			.saturating_add((751_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_ed25519(r: u32, ) -> Weight {
		(52_412_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((724_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_secp256k1(r: u32, ) -> Weight {
		(156_933_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((678_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_sr25519(r: u32, ) -> Weight {
		(62_231_000 as Weight)
			// Standard Error: 0
			.saturating_add((757_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_ed25519(r: u32, ) -> Weight {
		(57_784_000 as Weight)
			// Standard Error: 0
			.saturating_add((749_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_secp256k1(r: u32, ) -> Weight {
		(165_961_000 as Weight)
			// Standard Error: 3_000
			.saturating_add((721_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn remove_registry_sr25519(c: u32, ) -> Weight {
		(62_612_000 as Weight)
			// Standard Error: 14_000
			.saturating_add((147_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_ed25519(c: u32, ) -> Weight {
		(61_228_000 as Weight)
			// Standard Error: 12_000
			.saturating_add((132_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_secp256k1(_c: u32, ) -> Weight {
		(167_872_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn new_registry(c: u32, ) -> Weight {
		(9_360_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((24_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}
