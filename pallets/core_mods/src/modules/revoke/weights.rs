//! Autogenerated weights for revoke
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-07-05, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("mainnet"), DB CACHE: 128

// Executed Command:
// ./target/release/dock-node
// benchmark
// --execution
// wasm
// --chain
// mainnet
// --wasm-execution
// compiled
// --pallet
// revoke
// --extra
// --extrinsic
// *
// --repeat
// 20
// --steps
// 50
// --output
// ./pallets/core_mods/src/modules/revoke/weights.rs
// --template
// node/module-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for revoke.
pub trait WeightInfo {
	fn revoke_sr25519(r: u32, ) -> Weight;
	fn revoke_ed25519(r: u32, ) -> Weight;
	fn revoke_secp256k1(r: u32, ) -> Weight;
	fn unrevoke_sr25519(r: u32, ) -> Weight;
	fn unrevoke_ed25519(r: u32, ) -> Weight;
	fn unrevoke_secp256k1(r: u32, ) -> Weight;
	fn remove_registry_sr25519(c: u32, ) -> Weight;
	fn remove_registry_ed25519(c: u32, ) -> Weight;
	fn remove_registry_secp256k1(c: u32, ) -> Weight;
	fn new_registry(c: u32, ) -> Weight;
}

/// Weights for revoke using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn revoke_sr25519(r: u32, ) -> Weight {
		(64_956_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_306_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_ed25519(r: u32, ) -> Weight {
		(62_688_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_247_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_secp256k1(r: u32, ) -> Weight {
		(208_491_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_309_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_sr25519(r: u32, ) -> Weight {
		(67_507_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_296_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_ed25519(r: u32, ) -> Weight {
		(64_507_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_242_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_secp256k1(r: u32, ) -> Weight {
		(196_126_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((2_347_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn remove_registry_sr25519(c: u32, ) -> Weight {
		(76_106_000 as Weight)
			// Standard Error: 51_000
			.saturating_add((372_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_ed25519(c: u32, ) -> Weight {
		(76_215_000 as Weight)
			// Standard Error: 40_000
			.saturating_add((36_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_secp256k1(_c: u32, ) -> Weight {
		(221_589_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn new_registry(c: u32, ) -> Weight {
		(21_174_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((76_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn revoke_sr25519(r: u32, ) -> Weight {
		(64_956_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_306_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_ed25519(r: u32, ) -> Weight {
		(62_688_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_247_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn revoke_secp256k1(r: u32, ) -> Weight {
		(208_491_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_309_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_sr25519(r: u32, ) -> Weight {
		(67_507_000 as Weight)
			// Standard Error: 0
			.saturating_add((2_296_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_ed25519(r: u32, ) -> Weight {
		(64_507_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((2_242_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn unrevoke_secp256k1(r: u32, ) -> Weight {
		(196_126_000 as Weight)
			// Standard Error: 4_000
			.saturating_add((2_347_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
	fn remove_registry_sr25519(c: u32, ) -> Weight {
		(76_106_000 as Weight)
			// Standard Error: 51_000
			.saturating_add((372_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_ed25519(c: u32, ) -> Weight {
		(76_215_000 as Weight)
			// Standard Error: 40_000
			.saturating_add((36_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn remove_registry_secp256k1(_c: u32, ) -> Weight {
		(221_589_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn new_registry(c: u32, ) -> Weight {
		(21_174_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((76_000 as Weight).saturating_mul(c as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}
